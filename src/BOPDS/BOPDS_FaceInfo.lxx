// Created by: Peter KURNEV
// Copyright (c) 2010-2014 OPEN CASCADE SAS
// Copyright (c) 2007-2010 CEA/DEN, EDF R&D, OPEN CASCADE
// Copyright (c) 2003-2007 OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN, CEDRAT,
//                         EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function :
// purpose  :
//=======================================================================
inline BOPDS_FaceInfo::BOPDS_FaceInfo()
    : myAllocator(NCollection_BaseAllocator::CommonBaseAllocator()),
      myIndex(-1),
      myPaveBlocksIn(100, myAllocator),
      myVerticesIn(100, myAllocator),
      myPaveBlocksOn(100, myAllocator),
      myVerticesOn(100, myAllocator),
      myPaveBlocksSc(100, myAllocator),
      myVerticesSc(100, myAllocator)
{
}

//=======================================================================
// function :
// purpose  :
//=======================================================================
inline BOPDS_FaceInfo::BOPDS_FaceInfo(const Handle(NCollection_BaseAllocator)& theAllocator)
    : myAllocator(theAllocator),
      myIndex(-1),
      myPaveBlocksIn(100, myAllocator),
      myVerticesIn(100, myAllocator),
      myPaveBlocksOn(100, myAllocator),
      myVerticesOn(100, myAllocator),
      myPaveBlocksSc(100, myAllocator),
      myVerticesSc(100, myAllocator)
{
}

//=======================================================================
// function : ~
// purpose  :
//=======================================================================
inline BOPDS_FaceInfo::~BOPDS_FaceInfo()
{
  Clear();
}

//=======================================================================
// function : Clear
// purpose  :
//=======================================================================
inline void BOPDS_FaceInfo::Clear()
{
  myPaveBlocksIn.Clear();
  myVerticesIn.Clear();
  myPaveBlocksOn.Clear();
  myVerticesOn.Clear();
}

//=======================================================================
// function : SetIndex
// purpose  :
//=======================================================================
inline void BOPDS_FaceInfo::SetIndex(const Standard_Integer theI)
{
  myIndex = theI;
}

//=======================================================================
// function : Index
// purpose  :
//=======================================================================
inline Standard_Integer BOPDS_FaceInfo::Index() const
{
  return myIndex;
}

//=======================================================================
// function : PaveBlockIn
// purpose  :
//=======================================================================
inline const BOPDS_IndexedMapOfPaveBlock& BOPDS_FaceInfo::PaveBlocksIn() const
{
  return myPaveBlocksIn;
}

//=======================================================================
// function : ChangePaveBlocksIn
// purpose  :
//=======================================================================
inline BOPDS_IndexedMapOfPaveBlock& BOPDS_FaceInfo::ChangePaveBlocksIn()
{
  return myPaveBlocksIn;
}

//=======================================================================
// function : VerticesIn
// purpose  :
//=======================================================================
inline const TColStd_MapOfInteger& BOPDS_FaceInfo::VerticesIn() const
{
  return myVerticesIn;
}

//=======================================================================
// function : ChangeVerticesIn
// purpose  :
//=======================================================================
inline TColStd_MapOfInteger& BOPDS_FaceInfo::ChangeVerticesIn()
{
  return myVerticesIn;
}

// On
//=======================================================================
// function : PaveBlocksOn
// purpose  :
//=======================================================================
inline const BOPDS_IndexedMapOfPaveBlock& BOPDS_FaceInfo::PaveBlocksOn() const
{
  return myPaveBlocksOn;
}

//=======================================================================
// function : ChangePaveBlocksOn
// purpose  :
//=======================================================================
inline BOPDS_IndexedMapOfPaveBlock& BOPDS_FaceInfo::ChangePaveBlocksOn()
{
  return myPaveBlocksOn;
}

//=======================================================================
// function : VerticesOn
// purpose  :
//=======================================================================
inline const TColStd_MapOfInteger& BOPDS_FaceInfo::VerticesOn() const
{
  return myVerticesOn;
}

//=======================================================================
// function : ChangeVerticesOn
// purpose  :
//=======================================================================
inline TColStd_MapOfInteger& BOPDS_FaceInfo::ChangeVerticesOn()
{
  return myVerticesOn;
}

// Sc
//=======================================================================
// function : PaveBlocksSc
// purpose  :
//=======================================================================
inline const BOPDS_IndexedMapOfPaveBlock& BOPDS_FaceInfo::PaveBlocksSc() const
{
  return myPaveBlocksSc;
}

//=======================================================================
// function : ChangePaveBlocksSc
// purpose  :
//=======================================================================
inline BOPDS_IndexedMapOfPaveBlock& BOPDS_FaceInfo::ChangePaveBlocksSc()
{
  return myPaveBlocksSc;
}

//=======================================================================
// function : VerticesSc
// purpose  :
//=======================================================================
inline const TColStd_MapOfInteger& BOPDS_FaceInfo::VerticesSc() const
{
  return myVerticesSc;
}

//=======================================================================
// function : ChangeVerticesSc
// purpose  :
//=======================================================================
inline TColStd_MapOfInteger& BOPDS_FaceInfo::ChangeVerticesSc()
{
  return myVerticesSc;
}
