// Created on: 2000-05-24
// Created by: data exchange team
// Copyright (c) 2000-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function : SetFace
// purpose  :
//=======================================================================

inline void ShapeUpgrade_EdgeDivide::SetFace(const TopoDS_Face& F)
{
  myFace = F;
}

//=======================================================================
// function : HasCurve2d
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_EdgeDivide::HasCurve2d() const
{
  return myHasCurve2d;
}

//=======================================================================
// function : HasCurve3d
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_EdgeDivide::HasCurve3d() const
{
  return myHasCurve3d;
}

//=======================================================================
// function : Knots2d
// purpose  :
//=======================================================================

inline Handle(TColStd_HSequenceOfReal) ShapeUpgrade_EdgeDivide::Knots2d() const
{
  return myKnots2d;
}

//=======================================================================
// function : Knots3d
// purpose  :
//=======================================================================

inline Handle(TColStd_HSequenceOfReal) ShapeUpgrade_EdgeDivide::Knots3d() const
{
  return myKnots3d;
}
