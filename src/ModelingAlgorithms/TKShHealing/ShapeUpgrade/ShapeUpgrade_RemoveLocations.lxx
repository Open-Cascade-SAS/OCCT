// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function : GetResult
// purpose  :
//=======================================================================

inline TopoDS_Shape ShapeUpgrade_RemoveLocations::GetResult() const
{
  return myShape;
}

//=======================================================================
// function : SetRemoveLevel
// purpose  :
//=======================================================================

inline void ShapeUpgrade_RemoveLocations::SetRemoveLevel(const TopAbs_ShapeEnum theLevel)
{

  if ((Standard_Integer)theLevel > TopAbs_FACE)
    myLevelRemoving = TopAbs_FACE;
  else
    myLevelRemoving = theLevel;
}

//=======================================================================
// function : RemoveLevel
// purpose  :
//=======================================================================

inline TopAbs_ShapeEnum ShapeUpgrade_RemoveLocations::RemoveLevel() const
{
  return myLevelRemoving;
}

//=======================================================================
// function : ModifiedShape
// purpose  :
//=======================================================================

inline TopoDS_Shape ShapeUpgrade_RemoveLocations::ModifiedShape(
  const TopoDS_Shape& theInitShape) const
{
  TopoDS_Shape aShape = theInitShape;
  if (myMapNewShapes.IsBound(theInitShape))
    aShape = myMapNewShapes.Find(theInitShape);
  return aShape;
}
