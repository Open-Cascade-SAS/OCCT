// Created on: 1999-10-05
// Created by: data exchange team
// Copyright (c) 1999-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function : SetPlaneMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertSurfaceToBezierBasis::SetPlaneMode(const Standard_Boolean mode)
{
  myPlaneMode = mode;
}

//=======================================================================
// function : GetPlaneMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertSurfaceToBezierBasis::GetPlaneMode() const
{
  return myPlaneMode;
}

//=======================================================================
// function : SetRevolutionMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertSurfaceToBezierBasis::SetRevolutionMode(const Standard_Boolean mode)
{
  myRevolutionMode = mode;
}

//=======================================================================
// function : GetRevolutionMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertSurfaceToBezierBasis::GetRevolutionMode() const
{
  return myRevolutionMode;
}

//=======================================================================
// function : SetExtrusionMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertSurfaceToBezierBasis::SetExtrusionMode(const Standard_Boolean mode)
{
  myExtrusionMode = mode;
}

//=======================================================================
// function : GetExtrusionMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertSurfaceToBezierBasis::GetExtrusionMode() const
{
  return myExtrusionMode;
}

//=======================================================================
// function : SetBSplineMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertSurfaceToBezierBasis::SetBSplineMode(const Standard_Boolean mode)
{
  myBSplineMode = mode;
}

//=======================================================================
// function : GetBSplineMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertSurfaceToBezierBasis::GetBSplineMode() const
{
  return myBSplineMode;
}
