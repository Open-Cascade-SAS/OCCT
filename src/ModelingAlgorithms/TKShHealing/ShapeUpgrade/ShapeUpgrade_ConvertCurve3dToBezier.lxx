// Created on: 1999-06-22
// Created by: data exchange team
// Copyright (c) 1999-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function : SetLineMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertCurve3dToBezier::SetLineMode(const Standard_Boolean mode)
{
  myLineMode = mode;
}

//=======================================================================
// function : GetLineMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertCurve3dToBezier::GetLineMode() const
{
  return myLineMode;
}

//=======================================================================
// function : SetCircleMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertCurve3dToBezier::SetCircleMode(const Standard_Boolean mode)
{
  myCircleMode = mode;
}

//=======================================================================
// function : GetCircleMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertCurve3dToBezier::GetCircleMode() const
{
  return myCircleMode;
}

//=======================================================================
// function : SetConicMode
// purpose  :
//=======================================================================

inline void ShapeUpgrade_ConvertCurve3dToBezier::SetConicMode(const Standard_Boolean mode)
{
  myConicMode = mode;
}

//=======================================================================
// function : GetConicMode
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeUpgrade_ConvertCurve3dToBezier::GetConicMode() const
{
  return myConicMode;
}
