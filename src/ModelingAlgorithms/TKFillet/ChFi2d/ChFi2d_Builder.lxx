// Created on: 1995-06-12
// Created by: Philippe DERVIEUX
// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <TopoDS.hxx>
#include <TopoDS_Shape.hxx>
#include <TopoDS_Vertex.hxx>
#include <TopoDS_Edge.hxx>
#include <TopoDS_Wire.hxx>
#include <TopoDS_Face.hxx>

//=======================================================================
// function : Result
// purpose  :
//=======================================================================

inline TopoDS_Face ChFi2d_Builder::Result() const
{
  TopoDS_Face aFace = newFace;
  aFace.Orientation(refFace.Orientation());
  return aFace;
}

//=======================================================================
// function : IsModified
// purpose  :
//=======================================================================

inline Standard_Boolean ChFi2d_Builder::IsModified(const TopoDS_Edge& E) const
{
  return history.IsBound(E);
}

//=======================================================================
// function : FilletEdges
// purpose  :
//=======================================================================

inline const TopTools_SequenceOfShape& ChFi2d_Builder::FilletEdges() const
{
  return fillets;
}

//=======================================================================
// function : ChamferEdges
// purpose  :
//=======================================================================

inline const TopTools_SequenceOfShape& ChFi2d_Builder::ChamferEdges() const
{
  return chamfers;
}

//=======================================================================
// function : NbFillet
// purpose  :
//=======================================================================

inline Standard_Integer ChFi2d_Builder::NbFillet() const
{
  return fillets.Length();
}

//=======================================================================
// function : NbChamfer
// purpose  :
//=======================================================================

inline Standard_Integer ChFi2d_Builder::NbChamfer() const
{
  return chamfers.Length();
}

//=======================================================================
// function : HasDescendant
// purpose  :
//=======================================================================

inline Standard_Boolean ChFi2d_Builder::HasDescendant(const TopoDS_Edge& E) const
{
  return history.IsBound(E);
}

//=======================================================================
// function : DescendantEdge
// purpose  :
//=======================================================================

inline const TopoDS_Edge& ChFi2d_Builder::DescendantEdge(const TopoDS_Edge& E) const
{
  return TopoDS::Edge(history.Find(E));
} // DescendantEdge

//=======================================================================
// function : Status
// purpose  :
//=======================================================================

inline ChFi2d_ConstructionError ChFi2d_Builder::Status() const
{
  return status;
}
