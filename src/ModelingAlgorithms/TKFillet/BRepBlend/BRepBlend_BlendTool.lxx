// Created on: 1993-12-06
// Created by: Jacques GOUSSARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Adaptor3d_HVertex.hxx>

inline Standard_Boolean BRepBlend_BlendTool::SingularOnUMin(const Handle(Adaptor3d_Surface)&)
{
  return Standard_False;
}

inline Standard_Boolean BRepBlend_BlendTool::SingularOnUMax(const Handle(Adaptor3d_Surface)&)
{
  return Standard_False;
}

inline Standard_Boolean BRepBlend_BlendTool::SingularOnVMin(const Handle(Adaptor3d_Surface)&)
{
  return Standard_False;
}

inline Standard_Boolean BRepBlend_BlendTool::SingularOnVMax(const Handle(Adaptor3d_Surface)&)
{
  return Standard_False;
}

inline Standard_Real BRepBlend_BlendTool::Tolerance(const Handle(Adaptor3d_HVertex)& V,
                                                    const Handle(Adaptor2d_Curve2d)& A)
{
  //  return Adaptor2d_HCurve2dTool::Resolution(A,1.e-6); // a voir
  return V->Resolution(A); // a voir
}

inline Standard_Real BRepBlend_BlendTool::Parameter(const Handle(Adaptor3d_HVertex)& V,
                                                    const Handle(Adaptor2d_Curve2d)& C)
{
  //  return BRep_Tool::Parameter(V,A->Curve().Edge());
  return V->Parameter(C);
}

inline Handle(Adaptor2d_Curve2d) BRepBlend_BlendTool::CurveOnSurf(
  const Handle(Adaptor2d_Curve2d)& C,
  const Handle(Adaptor3d_Surface)&)
{
  return C;
}
