// Created by: Peter KURNEV
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <BOPDS_Pair.hxx>

//=================================================================================================

inline BOPDS_VectorOfInterfVV& BOPDS_DS::InterfVV()
{
  return myInterfVV;
}

//=================================================================================================

inline BOPDS_VectorOfInterfVE& BOPDS_DS::InterfVE()
{
  return myInterfVE;
}

//=================================================================================================

inline BOPDS_VectorOfInterfVF& BOPDS_DS::InterfVF()
{
  return myInterfVF;
} //=================================================================================================

inline BOPDS_VectorOfInterfEE& BOPDS_DS::InterfEE()
{
  return myInterfEE;
}

//=================================================================================================

inline BOPDS_VectorOfInterfEF& BOPDS_DS::InterfEF()
{
  return myInterfEF;
}

//=================================================================================================

inline BOPDS_VectorOfInterfFF& BOPDS_DS::InterfFF()
{
  return myInterfFF;
}

//=================================================================================================

inline BOPDS_VectorOfInterfVZ& BOPDS_DS::InterfVZ()
{
  return myInterfVZ;
}

//=================================================================================================

inline BOPDS_VectorOfInterfEZ& BOPDS_DS::InterfEZ()
{
  return myInterfEZ;
}

//=================================================================================================

inline BOPDS_VectorOfInterfFZ& BOPDS_DS::InterfFZ()
{
  return myInterfFZ;
}

//=================================================================================================

inline BOPDS_VectorOfInterfZZ& BOPDS_DS::InterfZZ()
{
  return myInterfZZ;
}

//=================================================================================================

inline Standard_Integer BOPDS_DS::NbInterfTypes()
{
  return 10;
}

//=================================================================================================

inline Standard_Boolean BOPDS_DS::AddInterf(const Standard_Integer theI1,
                                            const Standard_Integer theI2)
{
  if (myInterfTB.Add(BOPDS_Pair(theI1, theI2)))
  {
    myInterfered.Add(theI1);
    myInterfered.Add(theI2);
    return Standard_True;
  }
  return Standard_False;
}

//=================================================================================================

inline Standard_Boolean BOPDS_DS::HasInterf(const Standard_Integer theI) const
{
  return myInterfered.Contains(theI);
}

//=================================================================================================

inline Standard_Boolean BOPDS_DS::HasInterf(const Standard_Integer theI1,
                                            const Standard_Integer theI2) const
{
  BOPDS_Pair aPK(theI1, theI2);
  return myInterfTB.Contains(aPK);
}

//=================================================================================================

inline const BOPDS_MapOfPair& BOPDS_DS::Interferences() const
{
  return myInterfTB;
}
