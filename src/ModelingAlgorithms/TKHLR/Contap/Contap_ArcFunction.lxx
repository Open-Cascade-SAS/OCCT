// Created on: 1993-06-03
// Created by: Jacques GOUSSARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

inline void Contap_ArcFunction::Set(const gp_Dir& Direction, const Standard_Real Angle)
{
  myType   = Contap_DraftStd;
  myDir    = Direction;
  myCosAng = Cos(M_PI / 2. + Angle);
}

inline void Contap_ArcFunction::Set(const gp_Pnt& Eye, const Standard_Real Angle)
{
  myType   = Contap_DraftPrs;
  myEye    = Eye;
  myCosAng = Cos(M_PI / 2. + Angle);
}

inline void Contap_ArcFunction::Set(const gp_Dir& Direction)
{
  myType = Contap_ContourStd;
  myDir  = Direction;
}

inline void Contap_ArcFunction::Set(const gp_Pnt& Eye)
{
  myType = Contap_ContourPrs;
  myEye  = Eye;
}

inline void Contap_ArcFunction::Set(const Handle(Adaptor2d_Curve2d)& A)
{
  myArc = A;
  seqpt.Clear();
}

inline const gp_Pnt& Contap_ArcFunction::Valpoint(const Standard_Integer Index) const
{
  return seqpt(Index);
}

inline const Handle(Adaptor3d_Surface)& Contap_ArcFunction::Surface() const
{
  return (mySurf);
}

inline const gp_Pnt& Contap_ArcFunction::LastComputedPoint() const
{
  return solpt;
}
