// Created on: 2000-12-18
// Created by: Galina KULIKOVA
// Copyright (c) 2000-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetMaxTolerance(const Standard_Real theMaxToler)
{
  myMaxTolerance = theMaxToler;
}

//=================================================================================================


inline Standard_Real BRepBuilderAPI_Sewing::MaxTolerance() const
{
  return myMaxTolerance;
}

//=================================================================================================


inline Standard_Real BRepBuilderAPI_Sewing::Tolerance() const
{
  return myTolerance;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetTolerance(const Standard_Real theToler)
{
  myTolerance = theToler;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetMinTolerance(const Standard_Real theMinToler)
{
  myMinTolerance = theMinToler;
}

//=================================================================================================


inline Standard_Real BRepBuilderAPI_Sewing::MinTolerance() const
{
  return myMinTolerance;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetFaceMode(const Standard_Boolean theFaceMode)
{
  myFaceMode = theFaceMode;
}

//=================================================================================================


inline Standard_Boolean BRepBuilderAPI_Sewing::FaceMode() const
{
  return myFaceMode;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetFloatingEdgesMode(const Standard_Boolean theFloatingEdgesMode)
{
  myFloatingEdgesMode = theFloatingEdgesMode;
}

//=================================================================================================


inline Standard_Boolean BRepBuilderAPI_Sewing::FloatingEdgesMode() const
{
  return myFloatingEdgesMode;
}

/*
//=================================================================================================


inline  void BRepBuilderAPI_Sewing::SetCuttingFloatingEdgesMode(const Standard_Boolean
theCuttingFloatingEdgesMode)
{
  myCuttingFloatingEdgesMode = theCuttingFloatingEdgesMode;
}

//=================================================================================================


inline  Standard_Boolean BRepBuilderAPI_Sewing::CuttingFloatingEdgesMode() const
{
  return myCuttingFloatingEdgesMode;
}
*/

//=================================================================================================


inline Standard_Boolean BRepBuilderAPI_Sewing::SameParameterMode() const
{
  return mySameParameterMode;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetSameParameterMode(const Standard_Boolean SameParameterMode)
{
  mySameParameterMode = SameParameterMode;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetLocalTolerancesMode(
  const Standard_Boolean theLocalTolerancesMode)
{
  myLocalToleranceMode = theLocalTolerancesMode;
}

//=================================================================================================


inline Standard_Boolean BRepBuilderAPI_Sewing::LocalTolerancesMode() const
{
  return myLocalToleranceMode;
}

//=================================================================================================


inline void BRepBuilderAPI_Sewing::SetNonManifoldMode(const Standard_Boolean theNonManifoldMode)
{
  myNonmanifold = theNonManifoldMode;
}

//=================================================================================================


inline Standard_Boolean BRepBuilderAPI_Sewing::NonManifoldMode() const
{
  return myNonmanifold;
}
