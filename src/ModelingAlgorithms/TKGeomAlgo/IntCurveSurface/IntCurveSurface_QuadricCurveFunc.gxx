// Created on: 1993-08-19
// Created by: Laurent BUCHARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <gp_Vec.hxx>


//================================================================================
IntCurveSurface_QuadricCurveFunc::IntCurveSurface_QuadricCurveFunc(const TheQuadric& Q,
								   const TheCurve&   C) 
     : myQuadric(Q), myCurve(C) 
{  
} 
//================================================================================
Standard_Boolean IntCurveSurface_QuadricCurveFunc::Value(const Standard_Real Param,
							 Standard_Real& F) { 
  F = myQuadric.Distance(TheCurveTool::Value(myCurve,Param));
  return(Standard_True);
}

Standard_Boolean IntCurveSurface_QuadricCurveFunc::Derivative(const Standard_Real Param,
							      Standard_Real& D) { 
  gp_Pnt P;
  gp_Vec T;
  TheCurveTool::D1(myCurve,Param,P,T);  
  D = T.Dot(myQuadric.Gradient(P));
  return(Standard_True);
}

Standard_Boolean IntCurveSurface_QuadricCurveFunc::Values(const Standard_Real Param,
							  Standard_Real& F,
							  Standard_Real& D) { 
  gp_Pnt P;
  gp_Vec T,Grad;
  TheCurveTool::D1(myCurve,Param,P,T);  
  myQuadric.ValAndGrad(P,F,Grad);
  D = T.Dot(Grad);
  return(Standard_True);
}
  


