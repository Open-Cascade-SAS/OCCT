// Created on: 1993-01-14
// Created by: Laurent BUCHARD
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

void IntCurveSurface_PolygonTool::Dump(const ThePolygon& L) { 

  static Standard_Integer num=0;
  num++;
  Standard_Integer nbs = IntCurveSurface_PolygonTool::NbSegments(L);
  std::cout<<"\npol2d "<<num<<" "<<nbs<<std::endl;
  std::cout<<"Deflection "<<IntCurveSurface_PolygonTool::DeflectionOverEstimation(L)<<std::endl;
  
  for(Standard_Integer i=1;i<=nbs;i++) {
    gp_Pnt P(IntCurveSurface_PolygonTool::BeginOfSeg(L,i));
    std::cout<<"pnt "<<num<<" "<<i<<" "<<P.X()<<" "<<P.Y()<<" "<<P.Z()<<std::endl;
  }
  gp_Pnt PF(IntCurveSurface_PolygonTool::EndOfSeg(L,nbs));
  std::cout<<"pnt "<<num<<" "<<nbs<<" "<< PF.X()<<" "<<PF.Y()<<" "<<PF.Z()<<std::endl;
}


