// Created on: 1996-02-15
// Created by: Jacques GOUSSARD
// Copyright (c) 1996-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <TopoDS.hxx>

//=======================================================================
// function : LocOpe_FindEdgesInFace
// purpose  :
//=======================================================================

inline LocOpe_FindEdgesInFace::LocOpe_FindEdgesInFace() {}

//=======================================================================
// function : LocOpe_FindEdgesInFace
// purpose  :
//=======================================================================

inline LocOpe_FindEdgesInFace::LocOpe_FindEdgesInFace(const TopoDS_Shape& S, const TopoDS_Face& F)
{
  Set(S, F);
}

//=======================================================================
// function : Init
// purpose  :
//=======================================================================

inline void LocOpe_FindEdgesInFace::Init()
{
  myIt.Initialize(myList);
}

//=======================================================================
// function : More
// purpose  :
//=======================================================================

inline Standard_Boolean LocOpe_FindEdgesInFace::More() const
{
  return myIt.More();
}

//=======================================================================
// function : Edge
// purpose  :
//=======================================================================

inline const TopoDS_Edge& LocOpe_FindEdgesInFace::Edge() const
{
  return TopoDS::Edge(myIt.Value());
}

//=======================================================================
// function : Next
// purpose  :
//=======================================================================

inline void LocOpe_FindEdgesInFace::Next()
{
  myIt.Next();
}
