// Created on: 1993-07-12
// Created by: Martine LANGLOIS
// Copyright (c) 1993-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

Standard_Integer                         N, i;
Handle(StepGeom_HArray1OfCartesianPoint) aPoints;
Handle(StepGeom_CartesianPoint)          P2;

N       = P.Length();
aPoints = new StepGeom_HArray1OfCartesianPoint(1, N);
for (i = P.Lower(); i <= P.Upper(); i++)
{
  P1 = P.Value(i);
  GeomToStep_MakeCartesianPoint MkPoint(P1, theLocalFactors.LengthFactor());
  P2 = MkPoint.Value();
  aPoints->SetValue(i, P2);
}
thePolyline                           = new StepGeom_Polyline;
Handle(TCollection_HAsciiString) name = new TCollection_HAsciiString("");
thePolyline->Init(name, aPoints);
done = Standard_True;
