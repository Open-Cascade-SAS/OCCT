// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//#include <Interface_JaggedArray.ixx>

Interface_JaggedArray::Interface_JaggedArray
  (const Standard_Integer low, const Standard_Integer up)
: thelist (low,up)  {  Handle(Standard_Transient) nulo; thelist.Init(nulo);  }

    Standard_Integer  Interface_JaggedArray::Lower () const
      {  return thelist.Lower();  }

    Standard_Integer  Interface_JaggedArray::Upper () const
      {  return thelist.Upper();  }

    Standard_Integer  Interface_JaggedArray::Length () const
      {  return thelist.Length();  }

    void Interface_JaggedArray::SetValue
  (const Standard_Integer num, const Handle(TheKey)& val)
      {  thelist.SetValue(num,val);  }

    Handle(TheKey)  Interface_JaggedArray::Value
  (const Standard_Integer num) const
      {  return Handle(TheKey)::DownCast(thelist.Value(num));  }

//    Handle(TheKey)&  Interface_JaggedArray::ChangeValue
//  (const Standard_Integer num)
//      {  return thelist.ChangeValue(num);  }
