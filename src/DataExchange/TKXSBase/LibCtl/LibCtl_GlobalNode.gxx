// Copyright (c) 1998-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//#include <LibCtl_GlobalNode.ixx>

//  Classe generique imbriquee dans Library : utilisee pour construire les
//  listes globales de Modules attaches a une classe instanciee de Library
//  (cf Library pour plus de details)


LibCtl_GlobalNode::LibCtl_GlobalNode ()    {  }

// ATTENTION, Add agit en substitution : pour un Protocol donne, c est le
//   dernier appel qui l emporte
    void LibCtl_GlobalNode::Add
  (const Handle(TheModule)& amodule, const Handle(TheProtocol)& aprotocol)
{
  if (themod == amodule) return;
  if (theprot == aprotocol) themod = amodule;
  else if (thenext.IsNull()) {
    if (themod.IsNull()) {  themod = amodule;   theprot = aprotocol;  }
    else {
      thenext = new LibCtl_GlobalNode;
      thenext->Add (amodule,aprotocol);
    }
  }
  else thenext->Add (amodule,aprotocol);
}

    const Handle(TheModule)& LibCtl_GlobalNode::Module () const
      {  return themod;  }

    const Handle(TheProtocol)& LibCtl_GlobalNode::Protocol () const
      {  return theprot;  }

    const Handle(LibCtl_GlobalNode)& LibCtl_GlobalNode::Next () const
      {  return thenext;  }
