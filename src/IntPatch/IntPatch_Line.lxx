// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_DomainError.hxx>

inline void IntPatch_Line::SetValue(const Standard_Boolean Uiso1,
                                    const Standard_Boolean Viso1,
                                    const Standard_Boolean Uiso2,
                                    const Standard_Boolean Viso2)
{
  uS1 = Uiso1;
  vS1 = Viso1;
  uS2 = Uiso2;
  vS2 = Viso2;
}

inline IntPatch_IType IntPatch_Line::ArcType() const
{
  return typ;
}

inline Standard_Boolean IntPatch_Line::IsTangent() const
{

  return tg;
}

inline IntSurf_TypeTrans IntPatch_Line::TransitionOnS1() const
{

  return tS1;
}

inline IntSurf_TypeTrans IntPatch_Line::TransitionOnS2() const
{

  return tS2;
}

inline IntSurf_Situation IntPatch_Line::SituationS1() const
{

  if (tS1 != IntSurf_Touch)
  {
    throw Standard_DomainError();
  }
  return sit1;
}

inline IntSurf_Situation IntPatch_Line::SituationS2() const
{

  if (tS2 != IntSurf_Touch)
  {
    throw Standard_DomainError();
  }
  return sit2;
}

inline Standard_Boolean IntPatch_Line::IsUIsoOnS1() const
{

  return uS1;
}

inline Standard_Boolean IntPatch_Line::IsVIsoOnS1() const
{

  return vS1;
}

inline Standard_Boolean IntPatch_Line::IsUIsoOnS2() const
{

  return uS2;
}

inline Standard_Boolean IntPatch_Line::IsVIsoOnS2() const
{

  return vS2;
}
