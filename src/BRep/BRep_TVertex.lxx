// Created on: 1992-08-25
// Created by: Modelistation
// Copyright (c) 1992-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function : Tolerance
// purpose  :
//=======================================================================

inline Standard_Real BRep_TVertex::Tolerance() const
{
  return myTolerance;
}

//=======================================================================
// function : Tolerance
// purpose  :
//=======================================================================

inline void BRep_TVertex::Tolerance(const Standard_Real T)
{
  myTolerance = T;
}

//=======================================================================
// function : UpdateTolerance
// purpose  :
//=======================================================================

inline void BRep_TVertex::UpdateTolerance(const Standard_Real T)
{
  if (T > myTolerance)
    myTolerance = T;
}

//=======================================================================
// function : Pnt
// purpose  :
//=======================================================================

inline const gp_Pnt& BRep_TVertex::Pnt() const
{
  return myPnt;
}

//=======================================================================
// function : Pnt
// purpose  :
//=======================================================================

inline void BRep_TVertex::Pnt(const gp_Pnt& P)
{
  myPnt = P;
}

//=======================================================================
// function : Points
// purpose  :
//=======================================================================

inline const BRep_ListOfPointRepresentation& BRep_TVertex::Points() const
{
  return myPoints;
}

//=======================================================================
// function : ChangePoints
// purpose  :
//=======================================================================

inline BRep_ListOfPointRepresentation& BRep_TVertex::ChangePoints()
{
  return myPoints;
}
