// Created on: 1992-06-24
// Created by: Gilles DEBARBOUILLE
// Copyright (c) 1992-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Units_UnitsSequence.hxx>
#include <Units_Dimensions.hxx>
#include <TCollection_HAsciiString.hxx>

//=======================================================================
// function : Units_Quantity
// purpose  :
//=======================================================================

inline Units_Quantity::Units_Quantity(const Standard_CString             aname,
                                      const Handle(Units_Dimensions)&    adimensions,
                                      const Handle(Units_UnitsSequence)& aunitssequence)
{
  thename          = new TCollection_HAsciiString(aname);
  thedimensions    = adimensions;
  theunitssequence = aunitssequence;
}

//=======================================================================
// function : Name
// purpose  :
//=======================================================================

inline TCollection_AsciiString Units_Quantity::Name() const
{
  return thename->String();
}

//=======================================================================
// function : Dimensions
// purpose  :
//=======================================================================

inline Handle(Units_Dimensions) Units_Quantity::Dimensions() const
{
  return thedimensions;
}

//=======================================================================
// function : Sequence
// purpose  :
//=======================================================================

inline Handle(Units_UnitsSequence) Units_Quantity::Sequence() const
{
  return theunitssequence;
}
