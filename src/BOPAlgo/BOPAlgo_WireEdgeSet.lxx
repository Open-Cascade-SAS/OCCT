// Created by: Peter KURNEV
// Copyright (c) 2010-2014 OPEN CASCADE SAS
// Copyright (c) 2007-2010 CEA/DEN, EDF R&D, OPEN CASCADE
// Copyright (c) 2003-2007 OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN, CEDRAT,
//                         EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function :
// purpose  :
//=======================================================================
inline BOPAlgo_WireEdgeSet::BOPAlgo_WireEdgeSet() {}

//=======================================================================
// function :
// purpose  :
//=======================================================================
inline BOPAlgo_WireEdgeSet::BOPAlgo_WireEdgeSet(
  const Handle(NCollection_BaseAllocator)& theAllocator)
    : myStartShapes(theAllocator),
      myShapes(theAllocator)
{
}

//=======================================================================
// function : ~
// purpose  :
//=======================================================================
inline BOPAlgo_WireEdgeSet::~BOPAlgo_WireEdgeSet() {}

//=======================================================================
// function : Clear
// purpose  :
//=======================================================================
inline void BOPAlgo_WireEdgeSet::Clear()
{
  myStartShapes.Clear();
  myShapes.Clear();
}

//=======================================================================
// function : SetFace
// purpose  :
//=======================================================================
inline void BOPAlgo_WireEdgeSet::SetFace(const TopoDS_Face& aF)
{
  myFace = aF;
}

//=======================================================================
// function : Face
// purpose  :
//=======================================================================
inline const TopoDS_Face& BOPAlgo_WireEdgeSet::Face() const
{
  return myFace;
}

//=======================================================================
// function : AddStartElement
// purpose  :
//=======================================================================
inline void BOPAlgo_WireEdgeSet::AddStartElement(const TopoDS_Shape& aE)
{
  myStartShapes.Append(aE);
}

//=======================================================================
// function : StartElements
// purpose  :
//=======================================================================
inline const TopTools_ListOfShape& BOPAlgo_WireEdgeSet::StartElements() const
{
  return myStartShapes;
}

//=======================================================================
// function : AddShape
// purpose  :
//=======================================================================
inline void BOPAlgo_WireEdgeSet::AddShape(const TopoDS_Shape& aW)
{
  myShapes.Append(aW);
}

//=======================================================================
// function : Shapes
// purpose  :
//=======================================================================
inline const TopTools_ListOfShape& BOPAlgo_WireEdgeSet::Shapes() const
{
  return myShapes;
}
