// Created on: 1996-02-26
// Created by: Philippe MANGIN
// Copyright (c) 1996-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

inline Standard_OStream& operator<<(Standard_OStream& o, const FairCurve_MinimalVariation& MVC)
{
  MVC.Dump(o);
  return o;
}

inline void FairCurve_MinimalVariation::SetCurvature1(const Standard_Real Curvature)
{
  NewCurvature1 = Curvature;
}

inline void FairCurve_MinimalVariation::SetCurvature2(const Standard_Real Curvature)
{
  NewCurvature2 = Curvature;
}

inline void FairCurve_MinimalVariation::SetPhysicalRatio(const Standard_Real Ratio)
{
  Standard_DomainError_Raise_if(Ratio < 0 || Ratio > 1,
                                "FairCurve_MinimalVariation::SetPhysicalRatio");
  NewPhysicalRatio = Ratio;
}

inline Standard_Real FairCurve_MinimalVariation::GetCurvature1() const
{
  return OldCurvature1;
}

inline Standard_Real FairCurve_MinimalVariation::GetCurvature2() const
{
  return OldCurvature2;
}

inline Standard_Real FairCurve_MinimalVariation::GetPhysicalRatio() const
{
  return OldPhysicalRatio;
}
