// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <StdFail_NotDone.hxx>

inline Standard_Boolean math_NewtonFunctionRoot::IsDone() const
{
  return Done;
}

inline Standard_OStream& operator<<(Standard_OStream& o, const math_NewtonFunctionRoot& N)
{
  N.Dump(o);
  return o;
}

inline Standard_Real math_NewtonFunctionRoot::Root() const
{
  StdFail_NotDone_Raise_if(!Done, " ");
  return X;
}

inline Standard_Real math_NewtonFunctionRoot::Derivative() const
{
  StdFail_NotDone_Raise_if(!Done, " ");
  return DFx;
}

inline Standard_Real math_NewtonFunctionRoot::Value() const
{
  StdFail_NotDone_Raise_if(!Done, " ");
  return Fx;
}

inline Standard_Integer math_NewtonFunctionRoot::NbIterations() const
{
  StdFail_NotDone_Raise_if(!Done, " ");
  return It;
}
