// Created on: 1999-06-25
// Created by: data exchange team
// Copyright (c) 1999-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <ShapeFix_Solid.hxx>
#include <ShapeFix_Shell.hxx>
#include <ShapeFix_Face.hxx>
#include <ShapeFix_Wire.hxx>

//=======================================================================
// function : FixSolidTool
// purpose  :
//=======================================================================

inline Handle(ShapeFix_Solid) ShapeFix_Shape::FixSolidTool() const
{
  return myFixSolid;
}

//=======================================================================
// function : FixShellTool
// purpose  :
//=======================================================================

inline Handle(ShapeFix_Shell) ShapeFix_Shape::FixShellTool() const
{
  return myFixSolid->FixShellTool();
}

//=======================================================================
// function : FixFaceTool
// purpose  :
//=======================================================================

inline Handle(ShapeFix_Face) ShapeFix_Shape::FixFaceTool() const
{
  return myFixSolid->FixShellTool()->FixFaceTool();
}

//=======================================================================
// function : FixWireTool
// purpose  :
//=======================================================================

inline Handle(ShapeFix_Wire) ShapeFix_Shape::FixWireTool() const
{
  return myFixSolid->FixShellTool()->FixFaceTool()->FixWireTool();
}

//=======================================================================
// function : FixEdgeTool
// purpose  :
//=======================================================================

inline Handle(ShapeFix_Edge) ShapeFix_Shape::FixEdgeTool() const
{
  return myFixSolid->FixShellTool()->FixFaceTool()->FixWireTool()->FixEdgeTool();
}

//=======================================================================
// function : FixSolidMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixSolidMode()
{
  return myFixSolidMode;
}

//=======================================================================
// function : FixFreeShellMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixFreeShellMode()
{
  return myFixShellMode;
}

//=======================================================================
// function : FixFreeFaceMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixFreeFaceMode()
{
  return myFixFaceMode;
}

//=======================================================================
// function : FixFreeWireMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixFreeWireMode()
{
  return myFixWireMode;
}

//=======================================================================
// function : FixSameParameterMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixSameParameterMode()
{
  return myFixSameParameterMode;
}

//=======================================================================
// function : FixVertexPositionMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixVertexPositionMode()
{
  return myFixVertexPositionMode;
}

//=======================================================================
// function : FixVertexTolMode
// purpose  :
//=======================================================================

inline Standard_Integer& ShapeFix_Shape::FixVertexTolMode()
{
  return myFixVertexTolMode;
}