// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <ShapeExtend.hxx>

//=======================================================================
// function : StatusWireGaps
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeFix_Wireframe::StatusWireGaps(const ShapeExtend_Status status) const
{
  return ShapeExtend::DecodeStatus(myStatusWireGaps, status);
}

//=======================================================================
// function : StatusSmallEdges
// purpose  :
//=======================================================================

inline Standard_Boolean ShapeFix_Wireframe::StatusSmallEdges(const ShapeExtend_Status status) const
{
  return ShapeExtend::DecodeStatus(myStatusSmallEdges, status);
}

//=======================================================================
// function : Shape
// purpose  :
//=======================================================================

inline TopoDS_Shape ShapeFix_Wireframe::Shape()
{
  return myShape;
}

//=======================================================================
// function : ModeDropSmallEdges
// purpose  :
//=======================================================================

inline Standard_Boolean& ShapeFix_Wireframe::ModeDropSmallEdges()
{
  return myModeDrop;
}

//=======================================================================
// function : SetLimitAngle
// purpose  :
//=======================================================================

inline void ShapeFix_Wireframe::SetLimitAngle(const Standard_Real theLimitAngle)
{
  myLimitAngle = theLimitAngle;
}

//=======================================================================
// function : LimitAngle
// purpose  :
//=======================================================================

inline Standard_Real ShapeFix_Wireframe::LimitAngle() const
{
  return myLimitAngle;
}
