// Created on: 1994-03-23
// Created by: Jean Marc LACHAUME
// Copyright (c) 1994-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// Function : Geom2dHatch_Intersector
// Purpose  : Constructor.
//=======================================================================

inline Geom2dHatch_Intersector::Geom2dHatch_Intersector(const Standard_Real Confusion,
                                                        const Standard_Real Tangency)
    : Geom2dInt_GInter(),
      myConfusionTolerance(Confusion),
      myTangencyTolerance(Tangency)
{
}

//=======================================================================
// Function : ConfusionTolerance
// Purpose  : Returns the confusion tolerance of the intersector.
//=======================================================================

inline Standard_Real Geom2dHatch_Intersector::ConfusionTolerance() const
{
  return myConfusionTolerance;
}

//=======================================================================
// Function : SetConfusionTolerance
// Purpose  : Sets the confusion tolerance of the intersector.
//=======================================================================

inline void Geom2dHatch_Intersector::SetConfusionTolerance(const Standard_Real Confusion)
{
  myConfusionTolerance = Confusion;
}

//=======================================================================
// Function : TangencyTolerance
// Purpose  : Returns the tangency tolerance of the intersector.
//=======================================================================

inline Standard_Real Geom2dHatch_Intersector::TangencyTolerance() const
{
  return myTangencyTolerance;
}

//=======================================================================
// Function : SetTangencyTolerance
// Purpose  : Sets the tangency tolerance of the intersector.
//=======================================================================

inline void Geom2dHatch_Intersector::SetTangencyTolerance(const Standard_Real Tangency)
{
  myTangencyTolerance = Tangency;
}

//=======================================================================
// Function : Intersect
// Purpose  : Intersects the curves C1 and C2.
//=======================================================================
#include <Adaptor2d_Curve2d.hxx>
#include <Geom2dAdaptor_Curve.hxx>

inline void Geom2dHatch_Intersector::Intersect(const Geom2dAdaptor_Curve& C1,
                                               const Geom2dAdaptor_Curve& C2)
{
  Geom2dInt_GInter::Perform(C1, C2, myConfusionTolerance, myTangencyTolerance);
}
