// Copyright (c) 1995-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

#include <Standard_DomainError.hxx>

inline void IntSurf_Transition::SetValue(const Standard_Boolean  Tangent,
                                         const IntSurf_TypeTrans Type)
{
  tangent = Tangent;
  typetra = Type;
}

inline void IntSurf_Transition::SetValue(const Standard_Boolean  Tangent,
                                         const IntSurf_Situation Situ,
                                         const Standard_Boolean  Oppos)
{

  tangent = Tangent;
  typetra = IntSurf_Touch;
  situat  = Situ;
  oppos   = Oppos;
}

inline void IntSurf_Transition::SetValue()
{

  typetra = IntSurf_Undecided;
}

inline IntSurf_TypeTrans IntSurf_Transition::TransitionType() const
{

  return typetra;
}

inline Standard_Boolean IntSurf_Transition::IsTangent() const
{

  if (typetra == IntSurf_Undecided)
  {
    throw Standard_DomainError();
  }
  return tangent;
}

inline IntSurf_Situation IntSurf_Transition::Situation() const
{

  if (typetra != IntSurf_Touch)
  {
    throw Standard_DomainError();
  }
  return situat;
}

inline Standard_Boolean IntSurf_Transition::IsOpposite() const
{

  if (typetra != IntSurf_Touch)
  {
    throw Standard_DomainError();
  }
  return oppos;
}
