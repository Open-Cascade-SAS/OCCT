// Created on: 2009-04-06
// Created by: Sergey ZARITCHNY
// Copyright (c) 2009-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//=======================================================================
// function : Signature
// purpose  :
//=======================================================================

inline Standard_Integer TDataXtd_PatternStd::Signature() const
{
  return mySignature;
}

//=======================================================================
// function : Axis1
// purpose  :
//=======================================================================

inline Handle(TNaming_NamedShape) TDataXtd_PatternStd::Axis1() const
{
  return myAxis1;
}

//=======================================================================
// function : Axis2
// purpose  :
//=======================================================================

inline Handle(TNaming_NamedShape) TDataXtd_PatternStd::Axis2() const
{
  return myAxis2;
}

//=======================================================================
// function : Axis1Reversed
// purpose  :
//=======================================================================

inline Standard_Boolean TDataXtd_PatternStd::Axis1Reversed() const
{
  return myAxis1Reversed;
}

//=======================================================================
// function : Axis2Reversed
// purpose  :
//=======================================================================

inline Standard_Boolean TDataXtd_PatternStd::Axis2Reversed() const
{
  return myAxis2Reversed;
}

//=======================================================================
// function : Value1
// purpose  :
//=======================================================================

inline Handle(TDataStd_Real) TDataXtd_PatternStd::Value1() const
{
  return myValue1;
}

//=======================================================================
// function : Value2
// purpose  :
//=======================================================================

inline Handle(TDataStd_Real) TDataXtd_PatternStd::Value2() const
{
  return myValue2;
}

//=======================================================================
// function : NbInstances1
// purpose  :
//=======================================================================

inline Handle(TDataStd_Integer) TDataXtd_PatternStd::NbInstances1() const
{
  return myNb1;
}

//=======================================================================
// function : NbInstances2
// purpose  :
//=======================================================================

inline Handle(TDataStd_Integer) TDataXtd_PatternStd::NbInstances2() const
{
  return myNb2;
}

//=======================================================================
// function : Mirror
// purpose  :
//=======================================================================

inline Handle(TNaming_NamedShape) TDataXtd_PatternStd::Mirror() const
{
  return myMirror;
}
