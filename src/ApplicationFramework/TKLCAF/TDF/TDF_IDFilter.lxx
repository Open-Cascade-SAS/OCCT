// Created by: DAUTRY Philippe
// Copyright (c) 1997-1999 Matra Datavision
// Copyright (c) 1999-2014 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

//      	---------------------

// Version:	0.0
// Version	Date		Purpose
//		0.0	Jun 10 1997	Creation

#include <TDF_Attribute.hxx>

inline Standard_Boolean TDF_IDFilter::IgnoreAll() const
{
  return myIgnore;
}

inline Standard_Boolean TDF_IDFilter::IsKept(const Standard_GUID& anID) const
{
  return (myIgnore == myIDMap.Contains(anID));
}

// Ce qui est plus compacte et rapide que:
// Standard_Boolean IsBound = myIDMap.Contains(anID);
// return myIgnore ? IsBound : !IsBound;

inline Standard_Boolean TDF_IDFilter::IsKept(const Handle(TDF_Attribute)& anAtt) const
{
  return IsKept(anAtt->ID());
}

inline Standard_Boolean TDF_IDFilter::IsIgnored(const Standard_GUID& anID) const
{
  return (myIgnore != myIDMap.Contains(anID));
}

inline Standard_Boolean TDF_IDFilter::IsIgnored(const Handle(TDF_Attribute)& anAtt) const
{
  return IsIgnored(anAtt->ID());
}
