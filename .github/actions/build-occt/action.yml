name: 'Build OCCT'
description: 'Prepare and build OCCT on a specific platform'

inputs:
  platform:
    description: 'Platform (windows, macos, linux)'
    required: true
  compiler:
    description: 'Compiler (msvc, clang, gcc)'
    required: true
  artifact-name:
    description: 'Name of the artifact to store build results'
    required: true
  additional-cmake-flags:
    description: 'Additional CMake flags'
    required: false
    default: ''
  use-vtk:
    description: 'Enable VTK'
    required: false
    default: 'true'
  build-use-pch:
    description: 'Enable precompiled headers'
    required: false
    default: 'true'
  build-opt-profile:
    description: 'Build optimization profile'
    required: false
    default: 'Production'
  cmake-build-type:
    description: 'CMake build type (Release, Debug, etc)'
    required: false
    default: 'Release'
  github-token:
    description: 'GitHub token for vcpkg NuGet package access'
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure OCCT
      uses: ./.github/actions/configure-occt
      with:
        platform: ${{ inputs.platform }}
        compiler: ${{ inputs.compiler }}
        additional-cmake-flags: ${{ inputs.additional-cmake-flags }}
        use-vtk: ${{ inputs.use-vtk }}
        build-use-pch: ${{ inputs.build-use-pch }}
        build-opt-profile: ${{ inputs.build-opt-profile }}
        cmake-build-type: ${{ inputs.cmake-build-type }}
        github-token: ${{ inputs.github-token }}

    - name: Upload vcpkg cache
      uses: ./.github/actions/upload-vcpkg-cache
      with:
        artifact-name: ${{ inputs.artifact-name }}-cache
        build-directory: build

    - name: Build OCCT (Windows)
      if: ${{ inputs.platform == 'windows' }}
      run: |
          cd build
          cmake --build . --target install --config Release
      shell: pwsh

    - name: Build OCCT (macOS)
      if: ${{ inputs.platform == 'macos' }}
      run: |
        cd build
        make install -j$(sysctl -n hw.logicalcpu)
      shell: bash

    - name: Build OCCT (Linux)
      if: ${{ inputs.platform == 'linux' }}
      run: |
        cd build
        cmake --build . --target install --config Release -- -j
      shell: bash

    - name: Upload install directory
      uses: actions/upload-artifact@v4.6.2
      with:
        name: ${{ inputs.artifact-name }}
        path: install
        retention-days: 7
